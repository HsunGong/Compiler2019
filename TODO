Projects:
	☐ lexer analysis @started(19-03-05 18:58)
	☐ syntax analysis
	☐ AST tree generate
	☐ Semantic analysis
	☐ IR generate
	☐ code optimize

Main:
    ✔ Generate Simple antlr @started(19-03-04 17:14) @done(19-03-13 21:00) @lasted(1w2d3h46m41s)
    ☐ Generate AST nodes and Type nodes for at most 1 day @started(19-03-16 14:28)

Parser: 
	✔ change antlr extension to use @started(19-03-05 18:04) @done(19-03-05 18:58) @lasted(54m24s)

ASTNode: @today 
    ✔ Scope init @done(19-03-16 16:35)
    ✔ Node @done(19-03-16 14:58)
        ✔ AST (programNode) @done(19-03-16 17:53)
        ✔ Decl(define) @done(19-03-16 16:19)
            ✔ Func @done(19-03-16 17:19)
            ✔ Class @done(19-03-16 17:19)
            ✔ Var @done(19-03-16 17:19)
            ✘ VarList @cancelled(19-03-16 17:22)
        ✔ Stmt @done(19-03-17 15:24)
            ✔ Block @done(19-03-17 15:24)
            ✔ Expr @done(19-03-17 15:44)
            ✔ If (cond) @done(19-03-17 15:24)
            ✔ While @done(19-03-17 15:35)
            ✔ For @done(19-03-17 15:35)
            ✔ Continue @done(19-03-17 15:35)
            ✔ Break @done(19-03-17 15:35)
            ✔ Return @done(19-03-17 15:35)
            ✘ Blank @cancelled(19-03-17 15:44)
            ✘ VarDecl @cancelled(19-03-17 15:44)
        ✔ Expr @done(19-03-17 15:57)
            ✔ FuncCall @done(19-03-17 16:15) class method ?? done with 
            ✔ suffix @done(19-03-17 16:33)
            ✔ prefix @done(19-03-17 16:33)
            ✔ memberaccess @done(19-03-17 21:29)
            ✔ binary or and @done(19-03-17 16:55)
            ✔ new @done(19-03-17 16:39)
            ✔ identifier ? id ? var decl node @critical  @done(19-03-17 21:19)
            ✔ array index(aref, subscript) @done(19-03-17 21:36)
            ✔ assign @done(19-03-17 17:03)
            ✔ this @done(19-03-17 16:35)
            ✔ const(literal) @done(19-03-17 16:46)
                ✔ int @done(19-03-17 16:46)
                ✔ string @done(19-03-17 16:46)
                ✔ bool @done(19-03-17 16:46)
            ✔ null @done(19-03-17 16:43)
        ✔ type @done(19-03-17 22:41)
            ✔ array @done(19-03-17 22:40)
            ✔ func, class @done(19-03-17 22:41)
            ✔ int, bool, string @done(19-03-17 22:41)
            ✔ null void @done(19-03-17 22:41)
        ☐ entity
        ☐  what is diff between type and entity

    ☐ remain may be used for asm in Scope
        static private final String KEY_PREFIX = "$";
        static private final String VAR_PREFIX = "$VAR$";
        static private final String CLASS_PREFIX = "$CLASS$";
        static private final String FUNC_PREFIX = "$FUNC$";
        static public final String ARRAY_CLASS_NAME = "__array";
        static public final String STRING_CLASS_NAME = "__string";
        static public final String THIS_PARA_NAME = "__this_para";

type from Book: @critical @high @today 
    ☐ change arrayList into LinkedHashSet or not? @started(19-03-16 17:30)
    ☐ add Location type