space @c 8
space @ans 8
space @visit 8
space @pre 8
space @f 8
space @i 8
space @j 8
space @open 8
space @closed 8

func build $start $ending {
%build_entry:
    $j = load 8 @j 0
    $i = load 8 @i 0
    $c = load 8 @c 0
    $i = move 1
    jump %for_cond

%for_cond:
    $vreg = sle $i 49
    br $vreg %for_body %for_after

%for_body:
    $j = move 50
    jump %for_cond_2

%for_cond_2:
    $vreg_2 = move 98
    $vreg_2 = sub $vreg_2 $i
    $vreg_3 = move $vreg_2
    $vreg_3 = add $vreg_3 1
    $vreg_4 = sle $j $vreg_3
    br $vreg_4 %for_body_2 %for_after_2

%for_after_2:
    jump %for_incr

%for_incr:
    $vreg_5 = move $i
    $i = add $i 1
    jump %for_cond

%for_body_2:
    $vreg_6 = move $i
    $vreg_6 = mul $vreg_6 8
    $vreg_6 = add $vreg_6 $c
    $vreg_6 = load 8 $vreg_6 8
    $vreg_7 = move $j
    $vreg_7 = mul $vreg_7 8
    $vreg_7 = add $vreg_7 $vreg_6
    store 8 $vreg_7 1 8
    jump %for_incr_2

%for_incr_2:
    $vreg_8 = move $j
    $j = add $j 1
    jump %for_cond_2

%for_after:
    $i = move 1
    jump %for_cond_3

%for_cond_3:
    $vreg_9 = sle $i 49
    br $vreg_9 %for_body_3 %for_after_3

%for_after_3:
    $i = move 50
    jump %for_cond_4

%for_cond_4:
    $vreg_10 = sle $i 98
    br $vreg_10 %for_body_4 %for_after_4

%for_after_4:
    store 8 @i $i 0
    store 8 @j $j 0
    ret 0

%for_body_4:
    $vreg_11 = move $i
    $vreg_11 = mul $vreg_11 8
    $vreg_11 = add $vreg_11 $c
    $vreg_11 = load 8 $vreg_11 8
    $vreg_12 = move $ending
    $vreg_12 = mul $vreg_12 8
    $vreg_12 = add $vreg_12 $vreg_11
    store 8 $vreg_12 1 8
    jump %for_incr_3

%for_incr_3:
    $vreg_13 = move $i
    $i = add $i 1
    jump %for_cond_4

%for_body_3:
    $vreg_14 = move $start
    $vreg_14 = mul $vreg_14 8
    $vreg_14 = add $vreg_14 $c
    $vreg_14 = load 8 $vreg_14 8
    $vreg_15 = move $i
    $vreg_15 = mul $vreg_15 8
    $vreg_15 = add $vreg_15 $vreg_14
    store 8 $vreg_15 1 8
    jump %for_incr_4

%for_incr_4:
    $vreg_16 = move $i
    $i = add $i 1
    jump %for_cond_3

}

func find $ending $start $flag {
%find_entry:
    $open = load 8 @open 0
    $visit = load 8 @visit 0
    $j = load 8 @j 0
    $f = load 8 @f 0
    $closed = load 8 @closed 0
    $i = load 8 @i 0
    $pre = load 8 @pre 0
    $c = load 8 @c 0
    $open = move 0
    $closed = move 1
    $i = move 1
    jump %for_cond_5

%for_cond_5:
    $vreg = sle $i $ending
    br $vreg %for_body_5 %for_after_5

%for_after_5:
    $vreg_2 = move 1
    $vreg_2 = mul $vreg_2 8
    $vreg_2 = add $vreg_2 $f
    store 8 $vreg_2 $start 8
    $vreg_3 = move $start
    $vreg_3 = mul $vreg_3 8
    $vreg_3 = add $vreg_3 $visit
    store 8 $vreg_3 1 8
    $vreg_4 = move $start
    $vreg_4 = mul $vreg_4 8
    $vreg_4 = add $vreg_4 $pre
    store 8 $vreg_4 0 8
    $flag = move 0
    jump %while_cond

%while_cond:
    $vreg_5 = slt $open $closed
    br $vreg_5 %and_lhs_true %while_after

%and_lhs_true:
    $vreg_6 = seq $flag 0
    br $vreg_6 %while_body %while_after

%while_after:
    store 8 @i $i 0
    store 8 @closed $closed 0
    store 8 @j $j 0
    store 8 @open $open 0
    ret $flag

%while_body:
    $vreg_7 = move $open
    $open = add $open 1
    $vreg_8 = move $open
    $vreg_8 = mul $vreg_8 8
    $vreg_8 = add $vreg_8 $f
    $vreg_8 = load 8 $vreg_8 8
    $i = move $vreg_8
    $j = move 1
    jump %for_cond_6

%for_cond_6:
    $vreg_9 = sle $j $ending
    br $vreg_9 %for_body_6 %for_after_6

%for_body_6:
    $vreg_10 = move $i
    $vreg_10 = mul $vreg_10 8
    $vreg_10 = add $vreg_10 $c
    $vreg_10 = load 8 $vreg_10 8
    $vreg_11 = move $j
    $vreg_11 = mul $vreg_11 8
    $vreg_11 = add $vreg_11 $vreg_10
    $vreg_11 = load 8 $vreg_11 8
    $vreg_12 = sgt $vreg_11 0
    br $vreg_12 %and_lhs_true_2 %if_after

%and_lhs_true_2:
    $vreg_13 = move $j
    $vreg_13 = mul $vreg_13 8
    $vreg_13 = add $vreg_13 $visit
    $vreg_13 = load 8 $vreg_13 8
    $vreg_14 = seq $vreg_13 0
    br $vreg_14 %if_then %if_after

%if_then:
    $vreg_15 = move $j
    $vreg_15 = mul $vreg_15 8
    $vreg_15 = add $vreg_15 $visit
    store 8 $vreg_15 1 8
    $vreg_16 = move $closed
    $closed = add $closed 1
    $vreg_17 = move $closed
    $vreg_17 = mul $vreg_17 8
    $vreg_17 = add $vreg_17 $f
    store 8 $vreg_17 $j 8
    $vreg_18 = move $j
    $vreg_18 = mul $vreg_18 8
    $vreg_18 = add $vreg_18 $pre
    store 8 $vreg_18 $i 8
    $vreg_19 = seq $closed $ending
    br $vreg_19 %if_then_2 %if_after_2

%if_then_2:
    $flag = move 1
    jump %if_after_2

%if_after_2:
    jump %if_after

%if_after:
    jump %for_incr_5

%for_incr_5:
    $vreg_20 = move $j
    $j = add $j 1
    jump %for_cond_6

%for_after_6:
    jump %while_cond

%for_body_5:
    $vreg_21 = move $i
    $vreg_21 = mul $vreg_21 8
    $vreg_21 = add $vreg_21 $visit
    store 8 $vreg_21 0 8
    jump %for_incr_6

%for_incr_6:
    $vreg_22 = move $i
    $i = add $i 1
    jump %for_cond_5

}

func improve $ending {
%improve_entry:
    $j = load 8 @j 0
    $i = load 8 @i 0
    $pre = load 8 @pre 0
    $ans = load 8 @ans 0
    $c = load 8 @c 0
    $i = move $ending
    $vreg = move $ans
    $ans = add $ans 1
    jump %while_cond_2

%while_cond_2:
    $vreg_2 = move $i
    $vreg_2 = mul $vreg_2 8
    $vreg_2 = add $vreg_2 $pre
    $vreg_2 = load 8 $vreg_2 8
    $vreg_3 = sgt $vreg_2 0
    br $vreg_3 %while_body_2 %while_after_2

%while_body_2:
    $vreg_4 = move $i
    $vreg_4 = mul $vreg_4 8
    $vreg_4 = add $vreg_4 $pre
    $vreg_4 = load 8 $vreg_4 8
    $j = move $vreg_4
    $vreg_5 = move $j
    $vreg_5 = mul $vreg_5 8
    $vreg_5 = add $vreg_5 $c
    $vreg_5 = load 8 $vreg_5 8
    $vreg_6 = move $i
    $vreg_6 = mul $vreg_6 8
    $vreg_6 = add $vreg_6 $vreg_5
    $vreg_6 = load 8 $vreg_6 8
    $vreg_7 = move $vreg_6
    $vreg_8 = move $j
    $vreg_8 = mul $vreg_8 8
    $vreg_8 = add $vreg_8 $c
    $vreg_8 = load 8 $vreg_8 8
    $vreg_9 = move $i
    $vreg_9 = mul $vreg_9 8
    $vreg_9 = add $vreg_9 $vreg_8
    $vreg_10 = move $vreg_6
    $vreg_10 = sub $vreg_10 1
    store 8 $vreg_6 $vreg_10 8
    $vreg_11 = move $i
    $vreg_11 = mul $vreg_11 8
    $vreg_11 = add $vreg_11 $c
    $vreg_11 = load 8 $vreg_11 8
    $vreg_12 = move $j
    $vreg_12 = mul $vreg_12 8
    $vreg_12 = add $vreg_12 $vreg_11
    $vreg_12 = load 8 $vreg_12 8
    $vreg_13 = move $vreg_12
    $vreg_14 = move $i
    $vreg_14 = mul $vreg_14 8
    $vreg_14 = add $vreg_14 $c
    $vreg_14 = load 8 $vreg_14 8
    $vreg_15 = move $j
    $vreg_15 = mul $vreg_15 8
    $vreg_15 = add $vreg_15 $vreg_14
    $vreg_16 = move $vreg_12
    $vreg_16 = add $vreg_16 1
    store 8 $vreg_12 $vreg_16 8
    $i = move $j
    jump %while_cond_2

%while_after_2:
    store 8 @ans $ans 0
    store 8 @i $i 0
    store 8 @j $j 0
    ret 0

}

func origin $N {
%origin_entry:
    $j = load 8 @j 0
    $i = load 8 @i 0
    $c = load 8 @c 0
    $vreg = move $N
    $vreg = mul $vreg 8
    $vreg = add $vreg 8
    $vreg = alloc $vreg
    store 8 $vreg $N 0
    $vreg_2 = move $vreg
    $c = move $vreg_2
    $i = move 0
    jump %for_cond_7

%for_cond_7:
    $vreg_3 = slt $i $N
    br $vreg_3 %for_body_7 %for_after_7

%for_after_7:
    store 8 @c $c 0
    store 8 @i $i 0
    store 8 @j $j 0
    ret 0

%for_body_7:
    $vreg_4 = move $i
    $vreg_4 = mul $vreg_4 8
    $vreg_4 = add $vreg_4 $c
    $vreg_5 = move $N
    $vreg_5 = mul $vreg_5 8
    $vreg_5 = add $vreg_5 8
    $vreg_5 = alloc $vreg_5
    store 8 $vreg_5 $N 0
    $vreg_6 = move $vreg_5
    store 8 $vreg_4 $vreg_6 8
    $j = move 0
    jump %for_cond_8

%for_cond_8:
    $vreg_7 = slt $j $N
    br $vreg_7 %for_body_8 %for_after_8

%for_after_8:
    jump %for_incr_7

%for_incr_7:
    $vreg_8 = move $i
    $i = add $i 1
    jump %for_cond_7

%for_body_8:
    $vreg_9 = move $i
    $vreg_9 = mul $vreg_9 8
    $vreg_9 = add $vreg_9 $c
    $vreg_9 = load 8 $vreg_9 8
    $vreg_10 = move $j
    $vreg_10 = mul $vreg_10 8
    $vreg_10 = add $vreg_10 $vreg_9
    store 8 $vreg_10 0 8
    jump %for_incr_8

%for_incr_8:
    $vreg_11 = move $j
    $j = add $j 1
    jump %for_cond_8

}

func main {
%main_entry:
    $ans = load 8 @ans 0
    call _init_func 
    $ans = load 8 @ans 0
    $vreg = call origin 110 
    $i = move 0
    $k = move 0
    $start = move 0
    $ending = move 0
    $flag = move 0
    $i1 = move 0
    $k = move 0
    $start = move 99
    $ending = move 100
    $flag = move 0
    $vreg_2 = call build $start $ending 
    $vreg_3 = call find $ending $start $flag 
    $a = move $vreg_3
    jump %while_cond_3

%while_cond_3:
    $vreg_4 = sgt $a 0
    br $vreg_4 %while_body_3 %while_after_3

%while_after_3:
    $toString = call toString $ans 
    call println $toString 
    ret 0

%while_body_3:
    $vreg_5 = call improve $ending 
    $ans = load 8 @ans 0
    $vreg_6 = call find $ending $start $flag 
    $a = move $vreg_6
    jump %while_cond_3

}

func _init_func {
%_init_func_entry:
    $visit = load 8 @visit 0
    $f = load 8 @f 0
    $pre = load 8 @pre 0
    $ans = load 8 @ans 0
    $ans = move 0
    $vreg = move 110
    $vreg = mul $vreg 8
    $vreg = add $vreg 8
    $vreg = alloc $vreg
    store 8 $vreg 110 0
    $vreg_2 = move $vreg
    $visit = move $vreg_2
    $vreg_3 = move 110
    $vreg_3 = mul $vreg_3 8
    $vreg_3 = add $vreg_3 8
    $vreg_3 = alloc $vreg_3
    store 8 $vreg_3 110 0
    $vreg_4 = move $vreg_3
    $pre = move $vreg_4
    $vreg_5 = move 110
    $vreg_5 = mul $vreg_5 8
    $vreg_5 = add $vreg_5 8
    $vreg_5 = alloc $vreg_5
    store 8 $vreg_5 110 0
    $vreg_6 = move $vreg_5
    $f = move $vreg_6
    store 8 @ans $ans 0
    store 8 @pre $pre 0
    store 8 @f $f 0
    store 8 @visit $visit 0
    ret 0

}

